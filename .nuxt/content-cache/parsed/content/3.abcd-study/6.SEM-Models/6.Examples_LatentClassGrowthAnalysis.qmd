{"parsed":{"_path":"/abcd-study/sem-models/examples_latentclassgrowthanalysis","_dir":"sem-models","_draft":false,"_partial":false,"_locale":"","title":"Latent Class Growth Analysis","description":"!!!!!!!!!!INCOMPLETE","author":"Biostatistics Working Group","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"!!!!!!!!!!INCOMPLETE"}]},{"type":"element","tag":"h1","props":{"id":"removed-duplicate-family-members"},"children":[{"type":"text","value":"removed duplicate family members"}]},{"type":"element","tag":"h1","props":{"id":"accounted-for-clustering-eg-by-site-in-the-model"},"children":[{"type":"text","value":"accounted for clustering (e.g., by site) in the model"}]},{"type":"element","tag":"pre","props":{"code":"\n#| echo: FALSE # The content of this code block will not be shown when rendered\n#| output: FALSE # Output from this code block will not be shown when rendered\n#| cache: FALSE\n\n# This code loads the data to be used for the example\n\nlibrary(tidyverse) # Collection of R packages for data science\nlibrary(tidySEM) # Structural equation modeling in R\nlibrary(lcmm) # estimates statistical models based on the linear mixed model theory\n\n# Set the data path\ndata_path <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/core-rds-5.0/non-imaging_excluding_nt_5.0.rds\"\n\n# Set the data path\ndata_path <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/core-rds-5.0/non-imaging_excluding_nt_5.0.rds\"\n\n# Read the data\ndf <- readRDS(data_path)\n\n# Create and mutate the dataframe\ndf_selected <- df %>%\n    select(src_subject_id, eventname, anthroheightcalc, site_id_l, rel_family_id.x) %>%\n    filter(eventname %in% c(\"baseline_year_1_arm_1\", \"1_year_follow_up_y_arm_1\", \"2_year_follow_up_y_arm_1\", \"3_year_follow_up_y_arm_1\")) %>%\n    #drop_na(anthroheightcalc) %>%\n    arrange(src_subject_id, eventname) %>%\n    mutate(\n        src_subject_id = factor(src_subject_id),\n        eventname = factor(eventname, levels = c(\"baseline_year_1_arm_1\", \"1_year_follow_up_y_arm_1\", \"2_year_follow_up_y_arm_1\", \"3_year_follow_up_y_arm_1\"), labels = c(\"Baseline\", \"Year_1\", \"Year_2\", \"Year_3\")),\n        anthroheightcalc = round(as.numeric(anthroheightcalc), 2),\n        site_id_l = factor(site_id_l), \n        rel_family_id.x = as.factor(rel_family_id.x)\n    ) %>%\n  rename(\n    id = src_subject_id,\n    event = eventname,\n    height = anthroheightcalc,\n    site = site_id_l,\n    family = rel_family_id.x\n    ) %>%\n    group_by(id) %>%\n    filter(all(c(\"Baseline\", \"Year_1\", \"Year_2\", \"Year_3\") %in% event)) %>%\n    fill(family, .direction = \"downup\") %>%\n    ungroup()\n\n# Remove duplicate family members\n\nset.seed(123)  # For reproducibility\n\n# Filter to baseline event\ndf_baseline <- df_selected %>%\n  filter(event == \"Baseline\")\n\n# Identify families with multiple members at baseline\nmulti_member_families <- df_baseline %>%\n  group_by(family) %>%\n  filter(n() > 1) %>%\n  ungroup()\n\n# Randomly select one member per family with multiple members at baseline\nselected_multi_members <- multi_member_families %>%\n  group_by(family) %>%\n  sample_n(1) %>%\n  ungroup()\n\n# Identify families with a single member at baseline\nsingle_member_families <- df_baseline %>%\n  group_by(family) %>%\n  filter(n() == 1) %>%\n  ungroup()\n\n# Combine the selected single members and randomly selected multi-members\nselected_families <- bind_rows(single_member_families, selected_multi_members)\n\n# Extract the ids of the selected individuals\nselected_ids <- selected_families$id\n\n# Filter the original dataset to include only the selected individuals\ndf_long <- df_selected %>%\n  filter(id %in% selected_ids)\n\n","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\n#| echo: FALSE # The content of this code block will not be shown when rendered\n#| output: FALSE # Output from this code block will not be shown when rendered\n#| cache: FALSE\n\n# This code loads the data to be used for the example\n\nlibrary(tidyverse) # Collection of R packages for data science\nlibrary(tidySEM) # Structural equation modeling in R\nlibrary(lcmm) # estimates statistical models based on the linear mixed model theory\n\n# Set the data path\ndata_path <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/core-rds-5.0/non-imaging_excluding_nt_5.0.rds\"\n\n# Set the data path\ndata_path <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/core-rds-5.0/non-imaging_excluding_nt_5.0.rds\"\n\n# Read the data\ndf <- readRDS(data_path)\n\n# Create and mutate the dataframe\ndf_selected <- df %>%\n    select(src_subject_id, eventname, anthroheightcalc, site_id_l, rel_family_id.x) %>%\n    filter(eventname %in% c(\"baseline_year_1_arm_1\", \"1_year_follow_up_y_arm_1\", \"2_year_follow_up_y_arm_1\", \"3_year_follow_up_y_arm_1\")) %>%\n    #drop_na(anthroheightcalc) %>%\n    arrange(src_subject_id, eventname) %>%\n    mutate(\n        src_subject_id = factor(src_subject_id),\n        eventname = factor(eventname, levels = c(\"baseline_year_1_arm_1\", \"1_year_follow_up_y_arm_1\", \"2_year_follow_up_y_arm_1\", \"3_year_follow_up_y_arm_1\"), labels = c(\"Baseline\", \"Year_1\", \"Year_2\", \"Year_3\")),\n        anthroheightcalc = round(as.numeric(anthroheightcalc), 2),\n        site_id_l = factor(site_id_l), \n        rel_family_id.x = as.factor(rel_family_id.x)\n    ) %>%\n  rename(\n    id = src_subject_id,\n    event = eventname,\n    height = anthroheightcalc,\n    site = site_id_l,\n    family = rel_family_id.x\n    ) %>%\n    group_by(id) %>%\n    filter(all(c(\"Baseline\", \"Year_1\", \"Year_2\", \"Year_3\") %in% event)) %>%\n    fill(family, .direction = \"downup\") %>%\n    ungroup()\n\n# Remove duplicate family members\n\nset.seed(123)  # For reproducibility\n\n# Filter to baseline event\ndf_baseline <- df_selected %>%\n  filter(event == \"Baseline\")\n\n# Identify families with multiple members at baseline\nmulti_member_families <- df_baseline %>%\n  group_by(family) %>%\n  filter(n() > 1) %>%\n  ungroup()\n\n# Randomly select one member per family with multiple members at baseline\nselected_multi_members <- multi_member_families %>%\n  group_by(family) %>%\n  sample_n(1) %>%\n  ungroup()\n\n# Identify families with a single member at baseline\nsingle_member_families <- df_baseline %>%\n  group_by(family) %>%\n  filter(n() == 1) %>%\n  ungroup()\n\n# Combine the selected single members and randomly selected multi-members\nselected_families <- bind_rows(single_member_families, selected_multi_members)\n\n# Extract the ids of the selected individuals\nselected_ids <- selected_families$id\n\n# Filter the original dataset to include only the selected individuals\ndf_long <- df_selected %>%\n  filter(id %in% selected_ids)\n\n"}]}]},{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Latent Class Growth Analysis (LCGA) is a specialized form of growth modeling that identifies distinct subgroups within a population based on their trajectory patterns over time. Unlike traditional growth models that assume a single underlying growth trajectory for all individuals, LCGA allows for the identification of multiple latent classes, each characterized by its own unique growth path. This method is particularly useful for uncovering heterogeneous patterns of change that might be obscured in an overall population analysis."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This example focuses on exploring the developmental trajectories of height across several annual assessments in a cohort from the ABCD Study. Employing LCGA provides the ability to categorize participants into distinct groups based on their growth patterns in height from baseline to subsequent follow-ups. The analysis will determine the number of latent classes that best fit the data, describe the characteristic growth trajectory of each class, and interpret the developmental implications of these findings. Visualizations such as trajectory plots for each class will be used to illustrate the distinct growth patterns."}]},{"type":"element","tag":"h2","props":{"id":"results"},"children":[{"type":"text","value":"Results"}]},{"type":"element","tag":"h3","props":{"id":"compute-latent-class-growth-analysis"},"children":[{"type":"text","value":"Compute Latent Class Growth Analysis"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Latent Class Growth Analysis (LCGA) is utilized to identify distinct subgroups within the sample based on their growth trajectories of height over four time points. This approach models latent classes that capture varying patterns of growth, potentially reflecting different developmental processes or intervention outcomes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The resulting latent class growth model helps delineate classes that show distinct growth patterns. Each class's trajectory can be characterized by its initial status (intercept), rate of growth (slope), and pattern changes over time (step and shape), providing a nuanced understanding of how height progresses differently across subgroups. This analysis is particularly valuable in understanding heterogeneity in developmental outcomes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"STEP 1: Compute LCGA"}]}]},{"type":"element","tag":"pre","props":{"code":"\n# Convert to wide format\ndf_wide <- df_long %>%\n  pivot_wider(names_from = event, values_from = height, id_cols = id)  %>%\n  drop_na()\n\nset.seed(27796)\ndf_wide[[\"id\"]] <- NULL\nmodel <- mx_growth_mixture(\n    model = \"\n  i =~ 1*Baseline + 1*Year_1 + 1*Year_2 + 1*Year_3\n  step =~ 0*Baseline + 1*Year_1 + 1*Year_2 + 1*Year_3\n  s =~ 0*Baseline + 1*Year_1 + 2*Year_2 + 3*Year_3\n  Baseline ~~ vBaseline*Baseline\n  Year_1 ~~ vYear_1*Year_1\n  Year_2 ~~ vYear_2*Year_2\n  Year_3 ~~ Year_3*Year_3\n  i ~~ 0*i\n  step ~~ 0*step\n  s ~~ 0*s\n  i ~~ 0*s\n  i ~~ 0*step\n  s ~~ 0*step\",\n    classes = 1:4, data = df_wide, missing = \"FIML\", cluster = \"site\"\n)\n\n# Get fit table fit\nmodel_fit <- table_fit(model)\n# Select columns\nmodel_fit <- model_fit %>%\n    select(Name, Classes, LL, n, Parameters, AIC, BIC, saBIC, Entropy, prob_min, n_min)\n\nprint(model_fit)\n\nmodel_final <- mx_switch_labels(model[[4]],\n    param = \"M[1,7]\",\n    decreasing = FALSE\n)\n\ntab_res <- table_results(model_final, columns = NULL)\n# Select rows and columns\ntab_res <- tab_res[\n    tab_res$Category %in% c(\"Means\", \"Variances\"),\n    c(\"Category\", \"lhs\", \"est\", \"se\", \"pval\", \"confint\", \"name\")\n]\n\nprint(tab_res)\n\n","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\n# Convert to wide format\ndf_wide <- df_long %>%\n  pivot_wider(names_from = event, values_from = height, id_cols = id)  %>%\n  drop_na()\n\nset.seed(27796)\ndf_wide[[\"id\"]] <- NULL\nmodel <- mx_growth_mixture(\n    model = \"\n  i =~ 1*Baseline + 1*Year_1 + 1*Year_2 + 1*Year_3\n  step =~ 0*Baseline + 1*Year_1 + 1*Year_2 + 1*Year_3\n  s =~ 0*Baseline + 1*Year_1 + 2*Year_2 + 3*Year_3\n  Baseline ~~ vBaseline*Baseline\n  Year_1 ~~ vYear_1*Year_1\n  Year_2 ~~ vYear_2*Year_2\n  Year_3 ~~ Year_3*Year_3\n  i ~~ 0*i\n  step ~~ 0*step\n  s ~~ 0*s\n  i ~~ 0*s\n  i ~~ 0*step\n  s ~~ 0*step\",\n    classes = 1:4, data = df_wide, missing = \"FIML\", cluster = \"site\"\n)\n\n# Get fit table fit\nmodel_fit <- table_fit(model)\n# Select columns\nmodel_fit <- model_fit %>%\n    select(Name, Classes, LL, n, Parameters, AIC, BIC, saBIC, Entropy, prob_min, n_min)\n\nprint(model_fit)\n\nmodel_final <- mx_switch_labels(model[[4]],\n    param = \"M[1,7]\",\n    decreasing = FALSE\n)\n\ntab_res <- table_results(model_final, columns = NULL)\n# Select rows and columns\ntab_res <- tab_res[\n    tab_res$Category %in% c(\"Means\", \"Variances\"),\n    c(\"Category\", \"lhs\", \"est\", \"se\", \"pval\", \"confint\", \"name\")\n]\n\nprint(tab_res)\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The results from the latent class growth analysis indicate a substantial improvement in model fit as the number of classes increases from one to four, as evidenced by lower Akaike Information Criterion (AIC) and Bayesian Information Criterion (BIC) values. Specifically, the four-class model shows a log-likelihood (LL) of -21863.85, with an entropy of 0.84, suggesting good classification accuracy. The distribution of the sample across the classes is as follows: 10.1% (n=285) in the first class, 18.8% (n=530) in the second class, 35.7% (n=1006) in the third class, and 35.4% (n=997) in the fourth class."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Notably, each class exhibits distinct growth parameters, primarily differing in their intercepts while showing largely consistent slope patterns. The first class shows a mean intercept (i) of 50.30 and a slope (s) of 2.03, indicating steady growth; the second class has a higher mean intercept of 60.37 and a slope of 2.31, suggesting a higher starting point with a similar growth rate; the third class presents an intercept of 56.77 and a slope of 2.51, indicating robust growth; and the fourth class exhibits an intercept of 53.60 and a slope of 2.66, reflecting significant growth."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The variances across time points also differ significantly between classes, highlighting variability in growth patterns across the sample. For example, the variance in Year 3 ranges from 9.04 to 9.60, emphasizing the differences in individual growth trajectories within each class."}]},{"type":"element","tag":"h3","props":{"id":"model-plots"},"children":[{"type":"text","value":"Model Plots"}]},{"type":"element","tag":"pre","props":{"code":"\n# Assuming rng_height and lambda are defined previously in your script\nbrks <- seq(0, 1, length.out = 5) # Breaks in the rescaled 0-1 range\n\n# Convert breaks back to the original log scale\n# Note: This assumes that the original transformation was simply log(x) scaled to 0-1\nlabs <- exp(scales::rescale(brks, from = c(0, 1)))\n\np <- plot_growth(model[[4]], rawdata = TRUE, alpha_range = c(0, 0.05))\np <- p + scale_y_continuous(\n    breaks = brks, # Use the same breaks for simplicity\n    labels = round(labs, 2) # Round the labels for readability\n) + ylab(\"Height (rescaled from log)\")\np\n\n","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\n# Assuming rng_height and lambda are defined previously in your script\nbrks <- seq(0, 1, length.out = 5) # Breaks in the rescaled 0-1 range\n\n# Convert breaks back to the original log scale\n# Note: This assumes that the original transformation was simply log(x) scaled to 0-1\nlabs <- exp(scales::rescale(brks, from = c(0, 1)))\n\np <- plot_growth(model[[4]], rawdata = TRUE, alpha_range = c(0, 0.05))\np <- p + scale_y_continuous(\n    breaks = brks, # Use the same breaks for simplicity\n    labels = round(labs, 2) # Round the labels for readability\n) + ylab(\"Height (rescaled from log)\")\np\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following plot illustrates the growth trajectories for the latent class growth analysis model, displaying the raw data alongside the model-predicted trajectories for each class. The y-axis represents height, which has been rescaled from a log transformation for clarity. The breaks on the y-axis have been converted back to their original log scale values to provide meaningful interpretation. This plot visually demonstrates the distinct growth patterns identified by the model across the different classes."}]},{"type":"element","tag":"h2","props":{"id":"wrapping-up"},"children":[{"type":"text","value":"Wrapping Up"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This analysis assessed how participants' heights change across multiple time points, revealing improved model fit with an increase in the number of classes from one to four. This is supported by reductions in the Akaike Information Criterion (AIC) and Bayesian Information Criterion (BIC) values, suggesting that more precise class specifications enhance model accuracy. The best-fitting four-class model attained a log-likelihood of -21863.85 and an entropy of 0.84, indicating good classification accuracy. Distinct growth patterns emerged across classes, with notable variances in intercepts and consistent slopes across classes, emphasizing the variability of developmental patterns within the population. The distribution of the sample across the classes is as follows: 10.1% (n=285) in the first class, 18.8% (n=530) in the second class, 35.7% (n=1006) in the third class, and 35.4% (n=997) in the fourth class."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Latent Class Growth Analysis (LCGA) is particularly advantageous for exploring heterogeneous population subgroups that follow distinct developmental trajectories over time. This method effectively identifies and categorizes latent classes within the data based on differing patterns of change, without the assumption of normally distributed growth within each class. By classifying individuals into discrete groups that share similar growth patterns, LCGA provides clearer insights into how subgroups differ in their developmental trajectories. This approach is especially valuable in contexts where understanding diverse patterns of change trajectories is important, offering robust insights that reflect subgroup-specific trends rather than mere population averages. This makes LCGA ideal for studies where baseline characteristics and their influence on subsequent outcomes vary significantly across individuals."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"overview","depth":2,"text":"Overview"},{"id":"results","depth":2,"text":"Results","children":[{"id":"compute-latent-class-growth-analysis","depth":3,"text":"Compute Latent Class Growth Analysis"},{"id":"model-plots","depth":3,"text":"Model Plots"}]},{"id":"wrapping-up","depth":2,"text":"Wrapping Up"}]}},"_type":"markdown","_id":"content:3.abcd-study:6.SEM-Models:6.Examples_LatentClassGrowthAnalysis.qmd","_source":"content","_file":"3.abcd-study/6.SEM-Models/6.Examples_LatentClassGrowthAnalysis.qmd","_stem":"3.abcd-study/6.SEM-Models/6.Examples_LatentClassGrowthAnalysis","_extension":"qmd"},"hash":"AoTuw8ZxDC"}